name: CMake with GCC on all platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        cpp_compiler: [g++]

    steps:
    - uses: actions/checkout@v4

    - name: Install GCC (Windows only)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        install: mingw-w64-x86_64-gcc
        msystem: MINGW64
        update: true

    - name: Set PATH and compilers (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        echo "CMAKE_C_COMPILER=/mingw64/bin/gcc.exe" >> $GITHUB_ENV
        echo "CMAKE_CXX_COMPILER=/mingw64/bin/g++.exe" >> $GITHUB_ENV
        echo "PATH=/mingw64/bin:$PATH" >> $GITHUB_ENV
      shell: bash

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_C_COMPILER=${{ env.CMAKE_C_COMPILER || matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ env.CMAKE_CXX_COMPILER || matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
